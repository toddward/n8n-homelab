{{- if and (eq .Values.db.type "postgresdb") (not .Values.postgresql.enabled) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "n8n.postgresql.fullname" . }}
  labels:
    app: {{ include "n8n.name" . }}
    chart: {{ include "n8n.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data:
  postgres-password: {{ .Values.externalPostgresql.password | b64enc | quote }}
{{- end }}
{{- $secretName := printf "%s-encryption-key-secret" (include "n8n.fullname" .) }}
{{- $encryptionKey := ternary .Values.encryptionKey (randAlphaNum 32) (ne .Values.encryptionKey "") }}
{{- if not (lookup "v1" "Secret" .Release.Namespace $secretName) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "n8n.name" . }}
    chart: {{ include "n8n.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: Opaque
data:
  N8N_ENCRYPTION_KEY: {{ $encryptionKey | b64enc | quote }}
{{- end }}
{{- if and (eq .Values.worker.mode "queue") (not .Values.redis.enabled) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "n8n.redis.fullname" . }}
  labels:
    app: {{ include "n8n.name" . }}
    chart: {{ include "n8n.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
stringData:
  redis-username: {{ .Values.externalRedis.username | default "default" }}
  redis-password: {{ .Values.externalRedis.password }}
{{- end }}
